package dynamic;
/*
 * 평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 
 * 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.
 * 이 아파트에 거주를 하려면 조건이 있는데, 
 * “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 
 * 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

 *아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 
 * 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 
 * 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.
 */

 /*
  <출제 포인트>
  -1 적어본다면 간단한 점화식을 찾을 수 있다.
  3중 반복문으로 구현
  */



/*
 1층 3호
 해당 집의 거주민 수 6명

 2층 3호
 해당 집의 거주민 수 10명
3

D[0][1] = 1 | D[0][2] = 2 | D[0][3] = 3 | D[0][4] = 4 | D[0][5] = 5

D[1][1] = D[0][1] | D[1][2] = (D[0][1] + D[0][2]) | D[1][3] = (D[0][1] + D[0][2] + D[0][3])

D[2][1] = D[1][1] | D[2][2] = D[1][1] + D[1][2] = D[0][1] + (D[0][1] + D[0][2]) | D[2][3] = D[1][1] + D[1][2] + D[1][3] = D[0][1] + (D[0][1] + D[0][2]) + D([0][1] + D[0][2] + D[0][3]) 

D[3][1] = D[2][1] | D[3][2] = D[2][1] + D[2][2] = D[1][1] + D[1][1] + D[1][2] = D[0][1] + D[0][1] + D[0][1] +  D[0][2]

D[2][2] = D[0][1] + (D[0][1] + D[0][2]) = 2 * D[0][1] + D[0][2]
D[2][3] = D[0][1] + (D[0][1] + D[0][2]) + D([0][1] + D[0][2] + D[0][3]) = D[0][1] + D[0]

D[i][j] = D[i-1][1] + D[i-1][2] + ... D[i-1][j]
for(int i = 1; i <= n; i++){
    D[0][i] = i;
}

for(int i = 1; i < k + 1; i++){
    for(int j = 1; j < n + 1; j++){
        D[i][j] = 1;
        for(int k = 2; k < n + 1; k++){
            D[i][j] += D[1][k];
        }
    }
}


D[a][b] = D[a-1][1] + D[a-1][2] + ... + D[a]
 */

import java.util.*;
public class Baekjoon2775 {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        //테스트 케이스
        int t= sc.nextInt();
        
        //출력 배열
        ArrayList<Integer> answer = new ArrayList<>();

        for(int a = 0; a < t; a++){
            //층수
            int k = sc.nextInt();
            //호수
            int n = sc.nextInt();
                int D[][] = new int[k + 1][n + 1];

            for(int i = 1; i <= n; i++){
                D[0][i] = i;
            }

            for(int i = 1; i < k + 1; i++){
                for(int j = 1; j < n + 1; j++){
                    D[i][j] = 1;
                    for(int l = 2; l < j + 1; l++){
                        D[i][j] += D[i-1][l];
                    }
                }
            }
            answer.add(D[k][n]);
        }

        for(int x : answer){
            System.out.println(x);
        }
    }
}
